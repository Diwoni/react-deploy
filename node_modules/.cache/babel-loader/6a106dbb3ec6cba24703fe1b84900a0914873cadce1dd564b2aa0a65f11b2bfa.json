{"ast":null,"code":"import { rest } from 'msw';\n// Mock 데이터\nexport const PRODUCTS_MOCK_DATA = {\n  content: [{\n    id: 3245119,\n    name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n    imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n    price: 145000\n  }, {\n    id: 2263833,\n    name: '외식 통합권 10만원권',\n    imageUrl: 'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n    price: 100000\n  }, {\n    id: 6502823,\n    name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n    imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n    price: 108000\n  }, {\n    id: 1181831,\n    name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\n    imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\n    price: 122000\n  }, {\n    id: 1379982,\n    name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n    imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n    price: 133000\n  }],\n  number: 0,\n  totalElements: 5,\n  size: 10,\n  last: true\n};\nlet nextOrderId = 1;\nconst ordersDatabase = [];\nexport const orderHandlers = [\n// 주문 생성 핸들러\nrest.post('/api/orders', (req, res, ctx) => {\n  const newOrder = req.body;\n\n  // 유효성 검사\n  if (!newOrder.productId || !newOrder.optionId || !newOrder.quantity) {\n    return res(ctx.status(400), ctx.json({\n      message: 'Invalid input'\n    }));\n  }\n\n  // productId로 상품 정보 찾기\n  const product = PRODUCTS_MOCK_DATA.content.find(p => p.id === newOrder.productId);\n  if (!product) {\n    return res(ctx.status(404), ctx.json({\n      message: 'Product not found'\n    }));\n  }\n\n  // 주문 생성 로직\n  const createdOrder = {\n    id: nextOrderId++,\n    // 고유 ID 할당\n    productName: product.name,\n    optionName: '기본 옵션',\n    // 예시로 기본 옵션으로 설정\n    price: product.price * newOrder.quantity,\n    // 수량에 따른 가격 계산\n    date: new Date().toISOString(),\n    imageUrl: product.imageUrl,\n    ...newOrder\n  };\n\n  // 데이터베이스에 저장\n  ordersDatabase.push(createdOrder);\n  console.log('Created Order:', createdOrder);\n  return res(ctx.status(200), ctx.json(createdOrder));\n}),\n// 주문 목록 불러오기 핸들러\nrest.get('/api/orders', (req, res, ctx) => {\n  const page = parseInt(req.url.searchParams.get('page') || '0');\n  const size = parseInt(req.url.searchParams.get('size') || '10');\n  const totalElements = ordersDatabase.length;\n  const totalPages = Math.ceil(totalElements / size);\n  const start = page * size;\n  const end = start + size;\n  const orders = ordersDatabase.slice(start, end).map(order => ({\n    orderId: order.id,\n    productId: order.productId,\n    productName: order.productName,\n    optionName: order.optionName,\n    quantity: order.quantity,\n    date: order.date,\n    price: order.price,\n    imageUrl: order.imageUrl\n  }));\n  return res(ctx.status(200), ctx.json({\n    hasNext: page < totalPages - 1,\n    orders\n  }));\n})];","map":{"version":3,"names":["rest","PRODUCTS_MOCK_DATA","content","id","name","imageUrl","price","number","totalElements","size","last","nextOrderId","ordersDatabase","orderHandlers","post","req","res","ctx","newOrder","body","productId","optionId","quantity","status","json","message","product","find","p","createdOrder","productName","optionName","date","Date","toISOString","push","console","log","get","page","parseInt","url","searchParams","length","totalPages","Math","ceil","start","end","orders","slice","map","order","orderId","hasNext"],"sources":["/Users/jiwon/Desktop/KaKaoTech/Step2/5주차 과제/week5/react-product-login/src/api/hooks/order.mock.ts"],"sourcesContent":["import { rest } from 'msw';\n\ninterface OrderFormData {\n  productId: number;\n  optionId: number;\n  quantity: number;\n  hasCashReceipt: boolean;\n  cashReceiptType?: string;\n  cashReceiptNumber?: string;\n  message?: string;\n}\n\ninterface Order extends OrderFormData {\n  id: number;\n  productName: string;\n  optionName: string;\n  price: number;\n  date: string;\n  imageUrl: string;\n}\n\n// Mock 데이터\nexport const PRODUCTS_MOCK_DATA = {\n  content: [\n    {\n      id: 3245119,\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      price: 145000,\n    },\n    {\n      id: 2263833,\n      name: '외식 통합권 10만원권',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      price: 100000,\n    },\n    {\n      id: 6502823,\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n      price: 108000,\n    },\n    {\n      id: 1181831,\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\n      price: 122000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n  ],\n  number: 0,\n  totalElements: 5,\n  size: 10,\n  last: true,\n};\n\nlet nextOrderId = 1;\nconst ordersDatabase: Order[] = [];\n\nexport const orderHandlers = [\n  // 주문 생성 핸들러\n  rest.post('/api/orders', (req, res, ctx) => {\n    const newOrder = req.body as OrderFormData;\n\n    // 유효성 검사\n    if (!newOrder.productId || !newOrder.optionId || !newOrder.quantity) {\n      return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\n    }\n\n    // productId로 상품 정보 찾기\n    const product = PRODUCTS_MOCK_DATA.content.find((p) => p.id === newOrder.productId);\n\n    if (!product) {\n      return res(ctx.status(404), ctx.json({ message: 'Product not found' }));\n    }\n\n    // 주문 생성 로직\n    const createdOrder: Order = {\n      id: nextOrderId++, // 고유 ID 할당\n      productName: product.name,\n      optionName: '기본 옵션', // 예시로 기본 옵션으로 설정\n      price: product.price * newOrder.quantity, // 수량에 따른 가격 계산\n      date: new Date().toISOString(),\n      imageUrl: product.imageUrl,\n      ...newOrder,\n    };\n\n    // 데이터베이스에 저장\n    ordersDatabase.push(createdOrder);\n    console.log('Created Order:', createdOrder);\n\n    return res(ctx.status(200), ctx.json(createdOrder));\n  }),\n\n  // 주문 목록 불러오기 핸들러\n  rest.get('/api/orders', (req, res, ctx) => {\n    const page = parseInt(req.url.searchParams.get('page') || '0');\n    const size = parseInt(req.url.searchParams.get('size') || '10');\n    const totalElements = ordersDatabase.length;\n    const totalPages = Math.ceil(totalElements / size);\n\n    const start = page * size;\n    const end = start + size;\n    const orders = ordersDatabase.slice(start, end).map((order) => ({\n      orderId: order.id,\n      productId: order.productId,\n      productName: order.productName,\n      optionName: order.optionName,\n      quantity: order.quantity,\n      date: order.date,\n      price: order.price,\n      imageUrl: order.imageUrl,\n    }));\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        hasNext: page < totalPages - 1,\n        orders,\n      }),\n    );\n  }),\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}