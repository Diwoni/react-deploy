{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from '@tanstack/react-query';\nconst BASE_URL = 'http://localhost:3000';\nconst login = async loginData => {\n  const response = await fetch(`${BASE_URL}/api/members/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginData)\n  });\n  if (!response.ok) {\n    throw new Error('Invalid email or password');\n  }\n  return response.json();\n};\nexport const useLogin = options => {\n  _s();\n  return useMutation({\n    mutationFn: login,\n    ...options\n  });\n};\n_s(useLogin, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","BASE_URL","login","loginData","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","useLogin","options","_s","mutationFn"],"sources":["/Users/jiwon/Desktop/KaKaoTech/Step2/5주차 과제/week5/react-product-login/src/api/hooks/useLogin.ts"],"sourcesContent":["import type { UseMutationOptions } from '@tanstack/react-query';\nimport { useMutation } from '@tanstack/react-query';\n\ntype LoginRequestBody = {\n  email: string;\n  password: string;\n};\n\ntype LoginSuccessResponse = {\n  email: string;\n  token: string;\n};\n\nconst BASE_URL = 'http://localhost:3000';\n\nconst login = async (loginData: LoginRequestBody): Promise<LoginSuccessResponse> => {\n  const response = await fetch(`${BASE_URL}/api/members/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(loginData),\n  });\n\n  if (!response.ok) {\n    throw new Error('Invalid email or password');\n  }\n\n  return response.json();\n};\n\nexport const useLogin = (\n  options?: UseMutationOptions<LoginSuccessResponse, Error, LoginRequestBody>,\n) => {\n  return useMutation<LoginSuccessResponse, Error, LoginRequestBody>({\n    mutationFn: login,\n    ...options,\n  });\n};\n"],"mappings":";AACA,SAASA,WAAW,QAAQ,uBAAuB;AAYnD,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,KAAK,GAAG,MAAOC,SAA2B,IAAoC;EAClF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,oBAAmB,EAAE;IAC5DK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,QAAQ,GACnBC,OAA2E,IACxE;EAAAC,EAAA;EACH,OAAOhB,WAAW,CAAgD;IAChEiB,UAAU,EAAEf,KAAK;IACjB,GAAGa;EACL,CAAC,CAAC;AACJ,CAAC;AAACC,EAAA,CAPWF,QAAQ;EAAA,QAGZd,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}