{"ast":null,"code":"import { rest } from 'msw';\nconst wishesDatabase = [];\nlet nextId = 1;\nexport const interestHandlers = [rest.post('/api/wishes', (req, res, ctx) => {\n  const {\n    productId\n  } = req.body;\n\n  // 유효성 검사\n  if (!productId) {\n    return res(ctx.status(400), ctx.json({\n      message: 'Invalid input'\n    }));\n  }\n\n  // 제품 정보를 찾기\n  const product = products.find(p => p.id === productId);\n  if (!product) {\n    return res(ctx.status(404), ctx.json({\n      message: 'Product not found'\n    }));\n  }\n\n  // 새로운 위시 추가\n  const newWish = {\n    id: nextId++,\n    product\n  };\n  wishesDatabase.push(newWish);\n  console.log(newWish);\n  return res(ctx.status(201), ctx.json(newWish));\n}),\n// 관심 목록 리스트 불러오기\nrest.get('/api/wishes', (req, res, ctx) => {\n  const page = parseInt(req.url.searchParams.get('page') || '0');\n  const size = parseInt(req.url.searchParams.get('size') || '10');\n  const totalElements = wishesDatabase.length;\n  const totalPages = Math.ceil(totalElements / size);\n  const start = page * size;\n  const end = start + size;\n  const content = wishesDatabase.slice(start, end);\n  return res(ctx.status(200), ctx.json({\n    content,\n    pageable: {\n      sort: {\n        sorted: true,\n        unsorted: false,\n        empty: false\n      },\n      pageNumber: page,\n      pageSize: size,\n      offset: start,\n      unpaged: false,\n      paged: true\n    },\n    totalPages,\n    totalElements,\n    last: page === totalPages - 1,\n    number: page,\n    size,\n    numberOfElements: content.length,\n    first: page === 0,\n    empty: content.length === 0\n  }));\n})];","map":{"version":3,"names":["rest","wishesDatabase","nextId","interestHandlers","post","req","res","ctx","productId","body","status","json","message","product","products","find","p","id","newWish","push","console","log","get","page","parseInt","url","searchParams","size","totalElements","length","totalPages","Math","ceil","start","end","content","slice","pageable","sort","sorted","unsorted","empty","pageNumber","pageSize","offset","unpaged","paged","last","number","numberOfElements","first"],"sources":["/Users/jiwon/Desktop/KaKaoTech/Step2/5주차 과제/week5/react-product-login/src/api/hooks/interest.mock.ts"],"sourcesContent":["import { rest } from 'msw';\n\nconst wishesDatabase: { id: number; productId: number; imageUrl: string }[] = [];\nlet nextId = 1;\n\nexport const interestHandlers = [\n  rest.post('/api/wishes', (req, res, ctx) => {\n    const { productId } = req.body as { productId: number };\n\n    // 유효성 검사\n    if (!productId) {\n      return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\n    }\n\n    // 제품 정보를 찾기\n    const product = products.find((p) => p.id === productId);\n    if (!product) {\n      return res(ctx.status(404), ctx.json({ message: 'Product not found' }));\n    }\n\n    // 새로운 위시 추가\n    const newWish: WishItem = { id: nextId++, product };\n    wishesDatabase.push(newWish);\n    console.log(newWish);\n\n    return res(ctx.status(201), ctx.json(newWish));\n  }),\n\n  // 관심 목록 리스트 불러오기\n  rest.get('/api/wishes', (req, res, ctx) => {\n    const page = parseInt(req.url.searchParams.get('page') || '0');\n    const size = parseInt(req.url.searchParams.get('size') || '10');\n    const totalElements = wishesDatabase.length;\n    const totalPages = Math.ceil(totalElements / size);\n\n    const start = page * size;\n    const end = start + size;\n    const content = wishesDatabase.slice(start, end);\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        content,\n        pageable: {\n          sort: {\n            sorted: true,\n            unsorted: false,\n            empty: false,\n          },\n          pageNumber: page,\n          pageSize: size,\n          offset: start,\n          unpaged: false,\n          paged: true,\n        },\n        totalPages,\n        totalElements,\n        last: page === totalPages - 1,\n        number: page,\n        size,\n        numberOfElements: content.length,\n        first: page === 0,\n        empty: content.length === 0,\n      }),\n    );\n  }),\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}