{"ast":null,"code":"import { rest } from 'msw';\nconst wishesDatabase = []; // WishItem 형식으로 변경\nlet nextId = 1;\nexport const interestHandlers = [\n// 관심 목록에 추가\nrest.post('/api/wishes', (req, res, ctx) => {\n  const newWish = req.body;\n\n  // 유효성 검사\n  if (!newWish.product || !newWish.product.id) {\n    return res(ctx.status(400), ctx.json({\n      message: 'Invalid input'\n    }));\n  }\n\n  // 새로운 위시 추가\n  newWish.id = nextId++; // 고유 ID 할당\n  wishesDatabase.push(newWish);\n  console.log(newWish);\n  return res(ctx.status(201), ctx.json(newWish));\n}),\n// 관심 목록 리스트 불러오기\nrest.get('/api/wishes', (req, res, ctx) => {\n  const page = parseInt(req.url.searchParams.get('page') || '0');\n  const size = parseInt(req.url.searchParams.get('size') || '10');\n  const totalElements = wishesDatabase.length;\n  const totalPages = Math.ceil(totalElements / size);\n  const start = page * size;\n  const end = start + size;\n  const content = wishesDatabase.slice(start, end);\n  return res(ctx.status(200), ctx.json({\n    content,\n    pageable: {\n      sort: {\n        sorted: true,\n        unsorted: false,\n        empty: false\n      },\n      pageNumber: page,\n      pageSize: size,\n      offset: start,\n      unpaged: false,\n      paged: true\n    },\n    totalPages,\n    totalElements,\n    last: page === totalPages - 1,\n    number: page,\n    size,\n    numberOfElements: content.length,\n    first: page === 0,\n    empty: content.length === 0\n  }));\n}),\n// 위시 삭제 핸들러 추가\nrest.delete('/api/wishes/:wishId', (req, res, ctx) => {\n  const {\n    wishId\n  } = req.params;\n  const wishIndex = wishesDatabase.findIndex(wish => wish.id === Number(wishId));\n  if (wishIndex === -1) {\n    return res(ctx.status(404), ctx.json({\n      message: 'Wish not found'\n    }));\n  }\n  wishesDatabase.splice(wishIndex, 1); // 위시 삭제\n  return res(ctx.status(204)); // 성공 응답\n})];","map":{"version":3,"names":["rest","wishesDatabase","nextId","interestHandlers","post","req","res","ctx","newWish","body","product","id","status","json","message","push","console","log","get","page","parseInt","url","searchParams","size","totalElements","length","totalPages","Math","ceil","start","end","content","slice","pageable","sort","sorted","unsorted","empty","pageNumber","pageSize","offset","unpaged","paged","last","number","numberOfElements","first","delete","wishId","params","wishIndex","findIndex","wish","Number","splice"],"sources":["/Users/jiwon/Desktop/KaKaoTech/Step2/5주차 과제/week5/react-product-login/src/api/hooks/interest.mock.ts"],"sourcesContent":["import { rest } from 'msw';\n\nimport type { WishItem } from '@/pages/MyAccount';\n\nconst wishesDatabase: WishItem[] = []; // WishItem 형식으로 변경\nlet nextId = 1;\n\nexport const interestHandlers = [\n  // 관심 목록에 추가\n  rest.post('/api/wishes', (req, res, ctx) => {\n    const newWish = req.body as WishItem;\n\n    // 유효성 검사\n    if (!newWish.product || !newWish.product.id) {\n      return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\n    }\n\n    // 새로운 위시 추가\n    newWish.id = nextId++; // 고유 ID 할당\n    wishesDatabase.push(newWish);\n    console.log(newWish);\n\n    return res(ctx.status(201), ctx.json(newWish));\n  }),\n\n  // 관심 목록 리스트 불러오기\n  rest.get('/api/wishes', (req, res, ctx) => {\n    const page = parseInt(req.url.searchParams.get('page') || '0');\n    const size = parseInt(req.url.searchParams.get('size') || '10');\n    const totalElements = wishesDatabase.length;\n    const totalPages = Math.ceil(totalElements / size);\n\n    const start = page * size;\n    const end = start + size;\n    const content = wishesDatabase.slice(start, end);\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        content,\n        pageable: {\n          sort: {\n            sorted: true,\n            unsorted: false,\n            empty: false,\n          },\n          pageNumber: page,\n          pageSize: size,\n          offset: start,\n          unpaged: false,\n          paged: true,\n        },\n        totalPages,\n        totalElements,\n        last: page === totalPages - 1,\n        number: page,\n        size,\n        numberOfElements: content.length,\n        first: page === 0,\n        empty: content.length === 0,\n      }),\n    );\n  }),\n  // 위시 삭제 핸들러 추가\n  rest.delete('/api/wishes/:wishId', (req, res, ctx) => {\n    const { wishId } = req.params;\n    const wishIndex = wishesDatabase.findIndex((wish) => wish.id === Number(wishId));\n\n    if (wishIndex === -1) {\n      return res(ctx.status(404), ctx.json({ message: 'Wish not found' }));\n    }\n\n    wishesDatabase.splice(wishIndex, 1); // 위시 삭제\n    return res(ctx.status(204)); // 성공 응답\n  }),\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}